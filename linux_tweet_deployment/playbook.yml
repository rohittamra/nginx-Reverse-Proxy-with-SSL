- name: Deploy linux_tweet_app with Docker Compose
  hosts: web
  become: true

  vars:
    app_image: "rohit17061997/linux_tweet_app"
    domain_name: "rohittamra.pro"   # must point to your VM public IP
    email: "engr.rohittamra@gmail.com"

  tasks:
    - name: Install required packages
      apt:
        name:
          - docker.io
          - docker-compose
          - python3-pip
          - certbot
          - python3-certbot-nginx
          - nginx
        state: present
        update_cache: yes

    - name: Ensure deployment directory exists
      file:
        path: /opt/linux_tweet_app
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Create Docker Compose file
      template:
        src: docker-compose.yml.j2
        dest: /opt/linux_tweet_app/docker-compose.yml

    - name: Start linux_tweet_app with Docker Compose
      command: docker-compose up -d
      args:
        chdir: /opt/linux_tweet_app

    - name: Create NGINX config
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/sites-available/linux_tweet_app
      notify: Restart NGINX

    - name: Enable site
      file:
        src: /etc/nginx/sites-available/linux_tweet_app
        dest: /etc/nginx/sites-enabled/linux_tweet_app
        state: link
        force: true
      notify: Restart NGINX

    - name: Remove default site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      notify: Restart NGINX

    - name: Ensure NGINX is enabled and running
      service:
        name: nginx
        state: started
        enabled: true

    - name: Ensure SSL directory exists
      file:
        path: /etc/ssl/linux_tweet_app
        state: directory
        owner: root
        group: root
        mode: '0755'
      when: domain_name == "localhost"

    - name: Generate self-signed certificate for testing
      command: >
        openssl req -x509 -nodes -days 365
        -newkey rsa:2048
        -keyout /etc/ssl/linux_tweet_app/linux_tweet_app.key
        -out /etc/ssl/linux_tweet_app/linux_tweet_app.crt
        -subj "/CN={{ domain_name }}"
      args:
        creates: "/etc/ssl/linux_tweet_app/linux_tweet_app.crt"
      when: domain_name == "localhost"

    - name: Obtain Let's Encrypt certificate
      command: >
        certbot --nginx -n --agree-tos
        -m {{ email }}
        -d {{ domain_name }}
      args:
        creates: "/etc/letsencrypt/live/{{ domain_name }}/fullchain.pem"
      notify: Restart NGINX
      when: domain_name != "localhost"

  handlers:
    - name: Restart NGINX
      service:
        name: nginx
        state: restarted
